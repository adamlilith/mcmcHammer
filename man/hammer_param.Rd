% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hammer_param.r
\name{hammer_param}
\alias{hammer_param}
\title{Match variable names to results from an MCMC}
\usage{
hammer_param(param, i = NULL, j = NULL, k = NULL, l = NULL, mcmc = NULL)
}
\arguments{
\item{param}{Name of the variable(s). The outcome depends on the definitions of \code{i}, \code{j}, \code{k}, and \code{l}.
\itemize{
\item \code{param = NULL}: All variables in the MCMC object. An object must be supplied to the \code{mcmc} argument.
\item \verb{param =} a character vector and \code{i} is a numeric vector: Variables with the pattern "\verb{param*}" where \code{*} is \code{i}. For example: \code{beta1}, \code{beta2}, and \code{beta3}.
\item \verb{param =} a character vector and \code{i} is \code{TRUE}: Finds in the MCMC object all variables with the pattern "\verb{param*}" where \code{*} is numeric. You must supply \code{mcmc} in this case.
\itemize{
\item \verb{param =} a character vector and \code{j} is a numeric vector, but \code{k} is \code{NULL}: Variables with the pattern "\code{param[j]}".
\item \verb{param =} a character vector and \code{j} is \code{TRUE}, but \code{k} is \code{NULL}: Variables with the pattern "\code{param[j]}". You must supply \code{mcmc} in this case.
\item \verb{param =} a character vector and \code{j} and \code{k} are a numeric vectors but \code{l} is \code{NULL}: Variables with the pattern "\code{beta[j, k]}".
\item \verb{param =} a character vector and \code{j} and/or \code{k} are \code{TRUE} but \code{l} is \code{NULL}: Variables with the pattern "\verb{beta[*, k]}", "\verb{beta[j, *]}", or "\verb{beta[*, *]}" (depending on values of \code{j} and \code{k}. You must supply \code{mcmc} in this case.
\item \verb{param =} a character vector and \code{j}, \code{k}, and \code{l} are a numeric vectors: Variables with the pattern "\code{beta[j, k, l]}".
\item \verb{param =} a character vector and one or more of \code{j}, \code{k}, and \code{l} are a numeric vectors and/or \code{TRUE}: Variables with the pattern "\verb{beta[*, k, l]}", "\verb{beta[j, *, l]}", "\verb{beta[j, k, *]}", "\verb{beta[*, *, l]}", "\verb{beta[*, k, *]}",  "\verb{beta[j, *, *]}", or "\verb{beta[*, *, *]}". You must supply \code{mcmc} in this case.
}
}}

\item{i, j, k, l}{Indices used to specify variable names. Please see the help for \code{\link[=hammer_param]{hammer_param()}}.}

\item{mcmc}{An object of class \code{mcmc} or \code{mcmc.list}, \emph{or} a \code{list}. If a \code{list}, the function searches down the first element to see if it can find an \code{mcmc} or \code{mcmc.list} object, then uses this if it can.}
}
\value{
Character vector of variables.
}
\description{
This function automates finding of indexed variable in an MCMC object. These include, for example, variables like \code{beta1}, \code{beta2}, \code{beta3}, etc. or variables like \code{beta[1]}, \code{beta[2]}, \code{beta[1]}, etc. Only variable named in the MCMC object are returned.
}
\examples{

# Just making variable names:
param <- 'gamma'
hammer_param(param)
hammer_param(param, i = 0:1)
hammer_param(param, j = 1:2)
hammer_param(param, i = 0:1, j = 1:2)
hammer_param(param, j = 1:2, k = 1:3)
hammer_param(param, i = 0:1, j = 1:2, k = 1:2)
hammer_param(param, j = 1:2, k = 1:2, l = 1:2)
hammer_param(param, i = 0:1, j = 1:2, k = 1:2, l = 1:2)

# Getting variable names that are also in the MCMC object:
data(mcmc)
param <- 'beta'
hammer_param(param = NULL, mcmc = mcmc) # all variables
hammer_param(param, j = 3:4, mcmc = mcmc)

# Fuzzy finding of indexed variables:
hammer_param('beta', i = TRUE, mcmc = mcmc) # none with names beta0, etc.
hammer_param('beta', j = TRUE, mcmc = mcmc)
hammer_param('gamma', j = TRUE, k = 1:2, mcmc = mcmc)
hammer_param('gamma', j = TRUE, k = 1:2, mcmc = mcmc)

}
